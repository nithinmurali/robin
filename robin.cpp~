#include"robin.h"
#include"init.h"
#include<iostream>

robin::robin()
{
	robins = load_image( "res/robin.png" );


    //Initialize movement variables
    offSet = 0;
    voffset=0;
    uvelocity = 0;
    velocity =0;
    robin_Jump = 0;


    //Initialize animation variables
    frame = 0;
    status = robin_RIGHT;
}

void robin::handle_events()
{
    //If a key was pressed
    if( event.type == SDL_KEYDOWN )
    {
        //Set the velocity
        switch( event.key.keysym.sym )
        {
            case SDLK_RIGHT: velocity += robin_WIDTH / 4; frame++;break;
            case SDLK_LEFT: velocity -= robin_WIDTH / 4;frame++; break;
            case SDLK_UP:  {uvelocity = jvelocity;
                            jtime = 0;
                            robin_Jump=1;
                            frame=2;
                            //std::cout<<"jumped"<<uvelocity<<" ";
                            break;
                            }
        }
    }
    //If a key was released
    else if( event.type == SDL_KEYUP )
    {
        //Set the velocity
        switch( event.key.keysym.sym )
        {
           case SDLK_RIGHT: velocity -= robin_WIDTH / 4; break;
           case SDLK_LEFT: velocity += robin_WIDTH / 4; break;
        }
    }

}

void robin::move()
{
    //Move
    offSet += velocity;

    //Keep the stick figure in bounds
    if( ( offSet < 0 ) || ( offSet + robin_WIDTH > SCREEN_WIDTH ) )
    {
        offSet -= velocity;
    }
if(robin_Jump)
{


    uvelocity  -= g;
    jtime++;
    voffset+=uvelocity;

    if (uvelocity == -1*jvelocity)
    {
        uvelocity = 0;
        robin_Jump =0;
        voffset =0;
    }
     std::cout<<voffset<<"  ";
}

}


void robin::show()
{

       if(!robin_Jump)

       {

            //If robin is moving left
            if( velocity < 0 )
            {
                //Set the animation to left
                status = robin_LEFT;

                //Move to the next frame in the animation
                frame++;
            }
            //If robin is moving right
            else if( velocity > 0 )
            {
                //Set the animation to right
                status = robin_RIGHT;

                //Move to the next frame in the animation
                frame++;
            }
            //If robin standing
            else
            {
                //Restart the animation
                frame = 0;
            }



            //Loop the animation
            if( frame >= nooffrms - 1)
            {
                frame = 0;
            }

            //Show the stick figure
            if( status == robin_RIGHT )
            {
                apply_surface( offSet, SCREEN_HEIGHT - robin_HEIGHT  , robins , screen, &clipsRight[ frame ] );
            }
            else if( status == robin_LEFT )
            {
                apply_surface( offSet, SCREEN_HEIGHT - robin_HEIGHT  , robins, screen, &clipsLeft[ frame ] );
            }
       }
       else
       {
          frame++;

        if( frame >= 3)
            {
                frame = 1;
            }

            apply_surface( offSet, SCREEN_HEIGHT - robin_HEIGHT - voffset , robins, screen, &clipsjump[ frame ] );
       }

}

void robin::set_clips()
{
	for(int i=0;i<nooffrms;i++)
	{
		clipsRight[ i ].x =(robin_WIDTH+i)*i;
		clipsRight[ i ].y = 0;
		clipsRight[ i ].w = robin_WIDTH;
		clipsRight[ i ].h = robin_HEIGHT;

		clipsLeft[ i ].x = (robin_WIDTH+i) * i;
		clipsLeft[ i ].y = robin_HEIGHT*1;
		clipsLeft[ i ].w = robin_WIDTH;
		clipsLeft[ i ].h = robin_HEIGHT;

		clipsjump[ i ].x = (robin_WIDTH+i) * i;
		clipsjump[ i ].y = (robin_HEIGHT+1)*2;
		clipsjump[ i ].w = robin_WIDTH;
		clipsjump[ i ].h = robin_HEIGHT;



	}
}

